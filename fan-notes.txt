
==========================================================================
                             RocksDB Benchmarking
==========================================================================
0. Correct install pyrocksdb
    pip install tensorflow==1.15.2 # pip install tensorflow==2.1.0
    pip install numpy
    pip install pandas
    pip install scikit-learn
    pip install keras==2.1.3

    # [NEW] Now, install the rest of the dependencies
    pip install future
    pip install numpy
    pip install pandas
    pip install scikit-learn
    pip install onnx
    pip install torchviz
    pip install mpi
    pip install torch
    pip install tqdm

    cd ~
    sudo apt-get install build-essential libsnappy-dev zlib1g-dev libbz2-dev libgflags-dev liblz4-dev
    sudo apt-get update
    sudo apt-get install cmake python3-virtualenv python-dev -y

    git clone https://github.com/twmht/python-rocksdb.git --recursive -b pybind11
    cd python-rocksdb
    python setup.py install

    # Installed /home/fandi/anaconda3/envs/dlrm/lib/python3.7/site-packages/python_rocksdb-1.0-py3.7-linux-x86_64.egg
    # Installed /home/cc/anaconda3/lib/python3.9/site-packages/python_rocksdb-1.0-py3.9-linux-x86_64.egg

    python -c 'import pyrocksdb; print("it works!");'

    ssh cc@192.5.86.194


1. Connect to the server
    ssh cc@192.5.86.194 #Rex's server
    cd /home/cc/fan-rocksdb

2. Convert the EV-table to RocksDB and test simple request
    cd mnt/extra
    mkdir rocksdb
    cd rocksdb
    mkdir {csv_workload,bin_workload,str_db,bin_db}
    
    # Copy raw EV-table into csv_workload folder
    # cp /mnt/extra/dlrm/weights_and_biases/epoch-0/ev-table/* /mnt/extra/rocksdb/csv_workload/
    cp /home/cc/ev-tables-sqlite/ev-table-32/* /home/cc/fan-rocksdb/csv_workload
    
    # Open create_ev_table.py, then change these so it matches your folder paths
    # ================CHANGE THESE!!=============== #
    # csv_ev_path = "/home/cc/fan-rocksdb/csv_workload"
    # bin_ev_path = "/home/cc/fan-rocksdb/bin_workload"
    # str_db_path = "/home/cc/fan-rocksdb/str_db"
    # bin_db_path = "/home/cc/fan-rocksdb/bin_db"
    # ============================================== #
    # *_ev_path folder contain raw EV-table
    # *_db_path folder contain RocksDB database
    
    # RUN ONE BY ONE! 

    cd /home/cc/fan-rocksdb
    python create_ev_table.py --convert-csv2bin
    python create_ev_table.py --store-csv2db
    nohup python create_ev_table.py --store-bin2db & # Takes ~1 hour

    # Just to make sure whether the process of storing EV-table to RocksDB has been successful or not
    
    python create_ev_table.py --simple-benchmark-binDB 
    python create_ev_table.py --simple-benchmark-strDB

    # It will request ["1-1", "2-3", "2-1", "2-4", "1-6"]
    # 2-3; "2" for table and "3" for the key


3. Single client benchmarking
    
    cd /home/cc/fan-rocksdb

    python singleClientBench2.py --benchmark-strDB --max-request 1000 --latencyFile dummy.csv
    python singleClientBench2.py --benchmark-binDB --max-request 1000 --latencyFile dummy.csv